package com.example.infopelis;

import android.content.Context;

import androidx.test.platform.app.InstrumentationRegistry;
import androidx.test.ext.junit.runners.AndroidJUnit4;

import com.example.infopelis.Models.Pelicula;
import com.example.infopelis.Models.PeliculaModel;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;

import java.util.ArrayList;

import static org.junit.Assert.*;

/**
 * Instrumented test, which will execute on an Android device.
 *
 * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
 */
@RunWith(AndroidJUnit4.class)
public class ExampleInstrumentedTest {

    private PeliculaModel peliModel;

    @Before
    public void setUp(){
        InstrumentationRegistry.getInstrumentation().getTargetContext().deleteDatabase("InfoPelis.db");
        peliModel = PeliculaModel.getInstance(InstrumentationRegistry.getInstrumentation().getTargetContext());
    }

    @After
    public void tearDown() {
        peliModel.close();
    }

    @Test
    public void crudDB() {
        //creamos una nueva pelicula
        Pelicula p_nueva = new Pelicula();
            p_nueva.setTitulo("Toy Story");
            p_nueva.setDirector("Pedro");
            p_nueva.setDuracion ("100");
            p_nueva.setFecha ("10/01/2011");
            p_nueva.setCategoria("Aventuras") ;
            p_nueva.setEstreno(0);
            p_nueva.setComentario ("Perfecta para ni√±os");
            p_nueva.setImage("/9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAQCAwMDAgQDAwMEBAQEBQkGBQUFBQsICAYJDQsNDQ0LDAwOEBQRDg8TDwwMEhgSExUWFxcXDhEZGxkWGhQWFxb/2wBDAQQEBAUFBQoGBgoWDwwPFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhb/wAARCADNAJYDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD5E/CpGGGUcdPSmAU/OXFeqj0CG+H78ZH8NUZvvYOKv33/AB8Y9qo3A+avNn8TOGW49R+7U47VPCoJ6D8qiUZhXHpW14f0LUNS0XVtYhWOPT9FhSS9upn2ojO22KJf70jtkKo5O1icBSRLaSuwsZ8i/uz06VBaj5RwPyrq7DwtJqHw/vvE+n3DStotzHBrFm8e17ZJiVhnU/xRlwUbOCrFeoYEctDwp9hSjJSvboDViVBlgMD8qj1JQuqMMDhF/lXYaD4Y8MXUdulx8R9MtbyZEcwnSryWKNmAOxpkQ/MM4OFIBB5NR/ET4e+J9BaHWTbW+qaJfSJb2ur6RcLd2ksx6RF05jkPZJArHsKhVoN229U1919/kVyNK5x0gHXFFqM3a8dj/Kut+I/w38VeCNOtrrxDFp0f2hlR4bbUobia1dkLrHOiMTG5VScHsK5XTcHUI/of5GrhOFRJxd0S4tOzJWUdx+lQSj5eRVyQYYk1WuFwT71Qhlkud/HpT5gOgFGn/wAZ9xTpvvUAVZR83SrkI/0dTiqlx94Vej4s4/pV0l7xdPWRHIM9qKevSitJQdzSUXcMZOKdGMMKRPX2p8OOM+tdvQ6SK4+a6aqV2MNV6Qf6U1Ub771eXI4HuSoP3SH/AGa9t/ZvvfDLeH9A0/VtW0yzWz8ZPf6pHf3CRL5TWJhtbkByBKIpi2VGSNwOMGvFcf6PH/uitDQtI1bVpBDpWk31/Jn7lrbPKR9doOK5MZh416Lg5cvn+H9eZpRqOE00rn05Yab4bt/Evji8+JfiCLSrPWdJtLOO3+0xz32qWlj5Jmu5FiZtrTtCgQZLsZDjO0msW58KfCGfxhdS6dJ4Y1rS5otS1m7sbS8mhvIUhtVnht4FTiOL5Du3nJ87bjKceSz/AAx8c6RY2F3feFbq2GqXn2SxhOwzXM4GdiRKS+4DrkcZHrWr8O/gR8RvEXjefwg+mroGqQaaNSePVGaIm2Z9m4BAxOTu49A2a8OWCpQg6n1zo9npokr2Tb0sr679ju9pN2Xs+v8AXQ2/2XYfDWt/G/Sb+LR7e1uZddjltNNbVDFFYQdVaLcubllOcoWU4wQrc46LwTpUmj+K/wC1LjwRq3gXQ5ZZLfxidVvnOk3mmBCQVE2Ha5EgBjWPcQwBGDWR4Q+AmuyfGLU/h9JrjDV9LsYr63udItGuI59zRghWZ4yjIJATnn5W46Z6+5/Y41Y2LapqXjlrR4bP7QbO50djLGAm4r/riNw5HB696jMMRgoNVJYm0JxSXxvvtZ2u09Lq99dyqUKri4qF2nd7f5XK+o2HgDxlpN/e+IfEcGsavb2kE63/AIj8Qkw24ls4JGbyoZYSr+Yz7vvn5duPlCmPwT8Pfgje6mtrZalpmrHSJr1prSXWFt7q52W8SEmUyRo0HngSodw+SWVeqZGH8JP2XdX+IPwct/H+keJY7WGSWdJLK80mTzYzG5G5drncCACOAckj3rifFPwU8TaJ4w0Xw/ZEa1qeuRTzW1hDZTW86xxKdzssyqAOGxyfumriqSqvDwxbi10tZKy1fRW0b0at3M1zNKbpXT8z0HxL4O8D+DfhvY/Eey1RbHXr+1kvtDs7S/3/AGS4EjeUBG+550OFQH7mxZZGckotc58bfC/w0034SabrXg6bTEu7iSBTHNrLXWoS5X94divsCg8kmJMDjrwW6x4Z13xj491dfGEln4Qv/DWiWML2upQTLDDbRpHBGC8YYx7iyuMggmRj0Fcj8RPAs/hnS7u8uZ7OZ7fVf7MMlnfxzwvKsfmyKOFc7VeLnBAO7JBIFdtG7lT563vt3stmnsr3adr7r9TOcUk7R0/rX/hzk9Jj328zf3WA/SkkHzHNTaD/AMetx/vj+VQ3HE9e9KFoxfc5HH3UyrcLV7pbRrj+Gq0y/rVhziNB6KKvDq8mXRV5DM4ooaitmtTdpi5P6VJF2+tMUYx9KkjzvH1rc0YyU/6U9UL8/Ma+2v2H08Ba/wDDkaPqOj6XqesWLtJcG4s1kMcZ2hVLkdc54966/wAVeLv2ddK8Uy+GL7TdHttYhm8hrVdFyS+cYBC8/WvzvE8Vzp4mph44aUpQb27d9tj3Y8Mwly2qSd0npBNe9a329e3mfn+3+pUA/wAI/lXsX7Mfxi0T4eaTqui+MPD954k0i6ZLmxskumSO3uR8rkruAIZSCc5+aNTjuPUP24vA/hnw5puh65p+k2mnXBv1R5IUEa7QyHJA46E1694DtfhfqHw7tfFSeG9HutNitd01ydMUlzGo8wgEZbkH61z4niqjVwFOu8PJxm2rX2affzNYcLqKVSNZu9rWjrq2tVzaaxdtXf8AA+W/F37QGta1p2gw6T4V0Pw6+g6tHqtv9hi3RiZMhQFYcApsU85O3sDgcxrnxy+JGrfEa38cDWlsdYsraa1tpLKLy0ihlMmV29DgSkA9RtU9Rk+5/sq3HgDXvjF4p0q/tdPvl1W4J0aCS0EiqB8xwCMINoxz6YpP24rfwX4csdP0HTbLT9N1X7VFcSpDbCLfCWGDuAwcEEkdq0hmmGpY2ngYYOzet97KSu91e3RnRX4djzyg8U9E3flXK1G6WvP3Vr93Y+eW+IXjP/hNpfGUfiO8t9evOJr6BhG7AqEIwOOQo7e/Wq1x8QfHUGsX6x+Mtb26pDi8D3ruJQwbI+Ynbne33cdfYV9z/DbT/hprngGx1628PaLc2fkqkl1Lp6jdIqqHPI5+Y9e/WvAfjl8MUf8AbA0rT9Lso7ey1OSNo44k2pGGIwABwACz/wDfNXg+J8Jiak8PUw/I4rrb7PTb/hiHwrOVR06VZtpq9420clFv4nte78r6ni3hn4j+PvDvh7/hHdB8X6vpulrN562trcmNQ+QxII5wSBkZwe4rVs/jP8Sk+J1p4zbxLJJrFvZy2MMzxLsjikVwwEeNufnJBx1x6V94+JPBHw907Tb29PhrR/sumKxuHSxRmUIoY5AGSdpB/GvnX9nDUvh5qPx+8R2epW+m6hZ6rMI9It5bUSKWyuMLj5MDIyenSufC8TYfEqrW+p/w1d7O92rq9uq1fkRQ4chUp80MRK19uXe0XLT39bW/E4f4bftG+LvB/wATvEvjSXTdN1S+8TWP2aSOddkVuRjyyuAWZFAxsJ5HfPNXPjz8dNH+JfwjHhq60G30/VoZorwXbWoZWlVUEiwlCTH5hMnLcbVVSSTkfTXxIu/gJ4JuLaz8U6Homm3F3H5kGNK3hxkjqo65B4rzr9rbwH4Hl+BMvizRtDtLY7I5rOe3g8lijgkZX8q5IZ5ga2Kw8nhJRvJKMk9F0XZW7oSyKcqclGrL3v5oWTe615nv3sz470H/AI87r/ZdTUd9gSZr7G/Yb8HeBE+CUnijW/D1jfXMjyPcTXUAmKxogY7VP1P6V3vhHVPgR491t9F8JaRpN1fLE8kkP9keWFVeuSVwK9jHcZKlKdKnhpSVJtNp+fpoYx4cTpR55va7tC6V1zb8y2W+h+fMmGjBFSSdh6CvSf2vPDWk+FPjRfaXo1otpblFk8pPuqSAePzrzWTsfavqspxUcXQhiIqykk9fM8XEYN4PFToN3tbXumk1+DGNxRQ3SivUsQSdWGPSpIh+8HPeolGMGpY+Gz71QM+sP+Cavh69uIfFWrfuvI2xIm2VS+4tnlRyBhT1ryP48Bl/bOuFf7y6sM/99NXvP/BLXQdV02bxDr17YsNK1W3WO2uc5R3V1JT2YDmuP+O3wO+Kmr/tVal4w0nwZfXGh/2sZY7lSvzx7j8wGckcivzjloxzXE1+ZXcWvyt/kfa4Scl9XoS05XQlq1ok05f5+SZ3/wDwUe02fU/g/p15a+SBb3xEu+VUJyqkYyefuH9K6n4JeG57L9g8vdeSZf7JvZx5cgcBSGxyO/ynjtXnn/BR7zU+FulQyg/Lev8Ajwld/wDsri6vP2H5NKsopJ7m6069ighT70jspAUe5JrwcDy/2LS9rs5yXzOi/svYcr1Xs3e+nL7Srp+t77aW6v5n/Yjfyv2ibN/Qzf8AoL10/wDwUmsLqb4haNqoMRgmsFjH71Q2QSOVJz17/wD162v2T/gj8T/DXxvstY8R+D72y0z995lw5UqmUfGcHjkgfjXNf8FGrOWH4waXafxtZRqm44GWJAr3Z3qcSUq1Npw5N99kzgnCKyqdJq8lB6J661tO/Vp+a9bnunwW8OXVh+wfNNc+X5jabezo0UgfauCByOhyp47VJ4Vit/El34O+Jt2y+XpelXAvm9JUXHP0Pmn8q1f2dfDviHTP2Krzwre6VMuq3Wn3YgtOC03mIPLK84IbPFfNnw9+Jtz4L+Anir4V+IpPL8TwXwgghLbtiuf3gZuxwEH13eleLisu+uSnPDP3+bW3Z3TfofQ4PEJe2puXL77V7rSMkouPm7Ntd+R2Pov4U6ldeLvgL4ou3KG51i61ORN7hVUsvygk8AAYH4V8o/sceHdRvv2n9Nt41hJs7l3mPnr90Zc7eeeAeB9K+kPgf4f8R6R+y/Po2pabPHqF5aXJii4LTeZGNpX1DZ4rwP8AY08FeJ7P9qvT5m0x3GhagG1IRuGNqpccv7DOD71rk8qcY4+lzJLb1Wq0ObMKfNio1qUNFOb0ekPc6/NeXwtddPd/2n/gzd/EXxFpkzeI7HSl0+HaFuFJaQ7yc/Tmqv7YF1NoH7Kdr4b/ALOuL9kt4LeTULYD7OmxccknPPUcdAeasft+/Dfx5408c6DfeBfDmoajb29iBdS2pAVD5rnaTnk4IOPeov2k7G/0r9j3+z9QtpLeaGytUkikGGjYLypHqK5Xh6mGeCjKopw59I2ty69WtXcnDzjXpRmmuZpdt+WST3+x2a16l79lbwve2X7Gcl1ceVukt72RDFKr/KItvJHQ5U8fT1rxz/gn7N5Xx41F/wDp0nH6mvbf2DzLP+xnf6bBE001yl7HDEvV3aBQoHuTiuD/AGQfg78SPCXxUvdV8T+Fb3TLGe0m8u4k2ldx6A4PBOa9KvCnHDZgoP35dO7TOaNXmqLnaUY83XZSotJefRX6vp0PL/8Agodp1xbfHqbUG8ryLy2iaMLICw+RRyvUcg/p6ivEOsak91r179vcOn7QV6sv3lgjB/74WvIBkW8ZH93+tfZcLqX9m0b78qPlc5ssykl/LD/0iIxun40UueOlFfRnnjl5WnrxTF+6KkAy2KqKA91+CP7TWp/C7wLD4XsPC1rfxwStKZp7hlZmYDPA7cV2kP7e/iKNvI/4V7pbhuDm8kr5S1A4kas6Hm9U+9fKyybA+1lU5NW7vV9fmaVM4xM/jUXay+FdND2P9pb4+a/8XltrS80my0qxtGLpb2xLbmOMks3J6D8qn+APx/8AG/wz0tdKshbajpQbctpdKcIe+1hyOg/KvHDzJ+NXoD0UVs8rwUqH1eVNOG9vPv3uSs2xntfac/TltZWte9rWtvrte+u59W6h+3B4qg0mQ6d4K0qC4GFWSW4kkUE99uRXzl8RviD4m+IvxAHifxXefa7vzFbaihFRQRhVA4AwMVh6mG+wxqili8hP5D/69bnwz8KrqcjXeoT+TZxN87D7zn+6K6sPkuGozUKELaa6t7+prLHYqrPlhZbN2SWzvq92r2dtrpaHv9z+2hrXg3wrpJfwXp84KLbwxtdSBysagbyenp+dfM2reMh4u+MmpeJGsmtf7an8824fdtcHdgH/AL6xWZ+0deWT+PhpOmhvs2k26QnJzmQ/M5/UD/gNcRpd9c6fqVvfWshWa1lWWM+jKciuejlWBwVeX1eFltu367seMzjE1ZuLslzJuyS1V/8ANn25D+2Tq9lo9ppZ+H1g0dhbR26yNdPlgihQT2B4rhfhh+0LceBfiNr/AIvt/C63M3iHk2805RYwSGO0jk8j8q9I/Zj+D/8AwlHiLT/id4g06Oz0OeyS8sLO4iV5Z55FBVxGwK7F5IZhg5UgGvf/ABd4V0jXtGl0nxFZw6zpM42y295EhkhB4DwyqAyMvByK+PzjFZBl2LeHjDn5kuZp7a3tvuvVdj145jj3CSjUVnr8K10a/VniWn/tya4lilyvgPTdrFlIa9k4IrzX9ov9qbXPil4Pk8OJoGm6PazOGuPJmMjyY6cnoOT0r6y8K/Cz4Q+GbNLbSfhtorsmC099GbqR2x94mXdzVzxJ4Q8KanZmFPB3hpBjBRtIh2n/AMd4pTzzhyhKKhFvlt3evfU4vb4xe9BRi7Wukr/8D810PjD9m39pLxJ8MNFXwxFpNlqVhJPmLzmZDExwM5XqOB+Verzfty+JbLdAfAeksenzXMmPyzWb8bPgb4SeRp7bQP8AhH7rO6O400lYifeIkoR9Npr51+J2g6joOtGG9QFZcmKZPuSj29D7HpXr4H+xcwlKrSj7713av8r2Oerj8ZCCjVSlayu4puy0X9Mm+NXjbV/iH44vPFOtCFbq7OdkK7UQdAAPQAAfhXOQnNjHn3H61XaUNHtPWprME2Dc/dk/mK+qwcIUmoQVlY894ipXrupUd5P+vkktElshT9aKD92ivQNh61LCCZMVGo4qW3/1hPtVbK4MraocSH6VQs/+Pgn+6pqzqLZkaoLMfK7+vFeTLVnnvVky8MDWrotnJd3SRJwXIGfSs+zi3uGPTPHvXd/C/TTda5ENvyqck16GDwvtHzz2O7CYbnfPLYo/Ei1ttO1Gy0m0XH2e0UynuzuScn8MV3v7NvgzWviB4wt/DXh+3DiJd0sj8RQqPvSSHso/M5AHJrzHxxqC3/i3UL/d+7M7BDnoi/Kv6AV+hX7EPgW3+G37PNpq1/B5Wr+JY1vryR1w4Q8xQjP8Kodx9WY+ldNauqUHJbvY6KtZUoOS3ew/4R/sx/Br4cKb/UdBtfGHiOaRprvVtbgWYNIxJJigOY41yTjgt6sa9O+x+EZ7f7HP4T0F7UjBhbTYShHpt24rPa+F6omjfcjdCO9RyOqIXdgqjqSa8Q8cw47ey0/UrzTbCOOG3tJtkUEShUhib5ogqjgLglQBwNmKnxngiud8bXMj6lHrXhgrealaRmO604OM39vnJVR/fU8r68j0pPDfjDRtfhxYX6QXSHElpdfu5EbupDYwfY4r8c4lyOvhMXKrCN6cndPt5P8ArU+iwtdVYJX1W5q32oR21n9uPzRwOY7gD+DnGfwOPwNcxrPjForwrp5a4Y/8sFX51+ueMe9LrGpS6T4gZ7y1eTT9QXyL6HGSpIwJAO/Bwce1eO/tF+FtRtPhV4nS2vZGgjtRefbVkKia3Eg2QIe4IBLjucDoOeLLcvp16sY1Ha7S+92/D/I7ZWhByteyud23xZ0DWLyXQ57rSbyaNjHNaLfwM4YcEAb85HtXkf7UOhWMPgO81A2k0Vnw8T3KeWYpf4Qpb75PTC54J7V8sz2UjD/j33J2G2tTS47ttJbzlmaOFyi7ySqZGcDPTpX6RgeE6WGrxqUajVtbW3t8zxpY5VouLhqZ0mNwI796tacf3cy+oB/z+dRtassO8Dvkr/WnafxOwz95DX11G6qK551O6mrk+35aKVvu0V6DO0cv3anhGEJqDov4VYJ22/PpU1JctNkTdosybw5Y/Wn2sRKIg/i5PtUVz80uPWtCBdqE468D6V59ODnNI5KcOaViezQGTAHAGBXpvgG1vLfwreXGm2NxeajcgW1hbW8Rklmmf5VVFHJOTnj0rM/Z8+FXi74reKf7J8MWY8mBg1/qVxlbWxQ95G9euEHzH6ZI+9Ph34T+H3wI8IbrS5juNQjjxd65egCRzjkRL0jX2HJ7k17FbEU6FPkW56tTEQow5VueU/so/sqaf4SW18c/GGCC61WPE1h4dZhJDaEcq9yekjjqE5Ve+49O5+NfxSGpahNpOkz7ooeL66QZWFegjQd3Y8BRySa4j4xfFzUNcZra0luNP0+TPIH+l3g/2EP3FP8Aeb8Aa9F+C/w5sdF8P6d4i8SWyvqk0YubHTAcxaeHGQ755eYgjLt0zgYrxp1JTd5HnVI1HBVJ7Pb/AIB1ugw+RolpGYXhIgQmN/vISBwfcVW8UNE+nvA4Z2KnCI+0njpntVrXb8Wtu87nnGa8g+IHjf7OssjTbVX0/ljvWZgd1pB0+wWKCO6dZFwSloFjiB9CSpeQ+rMefQVa8UeDvDfixBdahZeXeAfLe2rmKdf+BDqPY5rhPhqPEl1rSwa14b1bTFki8+CS9tjGJU7MM+/rg9OOa9Yt1W1tRvOMDvSaTVmtB3aeh5T4p8IeKfD2nyC21H/hINJwd9vKgW7iHqoHyvj22mvlT49fFHxVdeKNd+HkeoW50COZFQxRHzpVCI+HduTls7uASRjpX2p44162MMkCS845welfGX7Udha6p8XvD0kJjhvNR04id0H3sTyJGze5AI+gFcOHyfBwxSrQppP00vda26M61i68oqm5HlGdrKffB967v4S/Z7nT9e0u6iSQS2yTIGGeVJB/RhXKeIdObT/3TNuaN2VyPWtz4RzbfGCxE8XNrLH9fl3D/wBBr6yp7tWDZ2TXLVg2c1q8KwXjoqgBWxjFZqoItQjx91zx+NdB41gMOsTIRjDmsS4XdGGHWNgwpY2nqprdE42ne0l0Ek5ookHJ+tFZN6mRJjcce1Pu8rb4otl3SHPao9Rk+XHvWOJkuWxjWl7tjOX5rxR717N+y/8ABDWvi7r0rmZtK8Maa6jVNXZM7T18mEHh5SPwUHJ7A8X8A/h/e/Ebx5/Z63H2HSrJBcavqbD5bODOOM8GRuir3PPQGvr3xJ4qgt/D9n8PPh3p/wDZ+h2EXlwW8LEFx1aSV+pLHknqxOSQMVxwqOF7bkYaFSc+WmrtnZaz468HfDDwTF4K+HOmW0Fjp/ynD4j8w9ZJpessp6nGW9sV4/rms6/4n1H+0b+6diDmOaZMCMf9MYei/wC82T6YrRtfC7RSJNeN9puFGFGPki9lHQV0vhbwbJql8kc7iFG5kkYZ2r3Pua48ViqeHpTr1pWjFXbf9f8ABPocLlNKl79Z8z/D/g/1ocN4Zs7VfE1jG6Mwmu4/tEsrbnkG4Z3E+tfV0dwbuNbgtuMgzmvC/iR4P03Q/EFjbaPrtrcTXq+Zb208ixzghgOMkBhk9ufavQ/hZ4mi1DTzplyfLvrX5XjY88VngsbQxlGNajK8ZK5xZ5dzpyW1v1Og8Q6bLqcf2ZJFjD8bmPA+teL/ABd+H/xD8KND4p8N6RZ68dOuo7iNI3SdFww+aRCRgLycsNvHNemeJfGN5okjJcaHdT4zteEZXHue1Ynh34ia7q+uCGw0tbcRt+8Z2KlAOOT612RaTTseFJNpq56f4P1TU/Fnhiy8Q67Yi0uVsVjePGP3pbLEDJxwEJGTgtjPFcp8Sru4tNLllhPCjnBrptO1PbpsdurqqKuAgPC+w9qq6poehawhXU9QuFR1KskKRcg+5Qt+Rok02EdEkeBzad4o1rwXL4rt5rGPSxqCWUnmSnzyW/iVQOgBBO7HHTPNfJfjDxNN4h+NNxrRRooLW7S2tIic+VBC4RAfc4LH3Y1+g1h8JfBmi2epx23iXV3t9VvReXCyBCysAAFU52gYHZe9cjB8Jv2c9Ev7i7fwXFqt3cTNNNNqd9LLucncSEVlReewWri4xkioSd02fFvj5dmvalbv/f3p+dVfh5P9n8ZaTMTgfaVU/Rvl/rX3PrHhf4B69MY734faC00vG+Iyxyn/AIEjg1wHxO/ZX8H/AGeLWPh54i/sLUI5Fmi0jWb4TQXGGB2pLjfGfTduHqR1rvq42FRxaVrHfVxUaji0rWPmn4uW4h8QS4H3ua49enNeqftK+GtX8O69DHq9l9me5jLxASpIHUHBIKMR1rytRxXoVXGUU1qjtrWlFNbDbhcSMCe9FOvPvhv7yr/KiuLY47WJrf5Y3b2rNv5GO7HJ7CtL/l1+tUrGPz9ZtYP+elwi/qK5MS/faOSs3zHr/hO/bw74H0/wlpQCyXU6XWpuvW5nb7qse6oOAPb3NfR3w50BbXTFYjfPMA0sh5LH6180eE7CU+OVinB/cqJOfwFfYXgWNTodvKB96MVyLdnv5VS5KHtO7H2ujqW3OtbVnp7G3kECdMA4/GnKBiprXWhokn2qSxnurfj7UYY9/wBnizjzWA52gkZxk8+xr57irBVsblFWjR+LR+tmm156LY9CpV5YuTeh8+/toaJqNhP4Y8U2quws53gJx9yQMsseT2ztb8q9F1zT11Dw7p3xA8O3LR297Cs4mQZMBbkq4HVd2Qe6nPbiuq+Kmv22paf9jgudEvtLkiEk9uWVvOwcja4PyHjgjnNed/FTxkfhhptrrHgPRLjVNA1FRLdQXmoST21s5ADK0fZSP4umQc9s/n+R4ysqWHhh6vLWg5JcyajOLd3F9n2/O5tUhHHYeGHlH3le2q2/R9jvvAfji6uokttWtB5oKqs8bbo5MkDIb8enWvIvFUHjjSPiZqVyLS9vbPUpJLmO4tIHmOnMjeWyzhASsbhVOTyGHQjONXwx8SPhl4rSXUtR8QHwteTgFoHgZUB+qAow9wR9K6fQbk+NNYWbw3441XxAsD7pZ9P06RbWJgPvyOQsbPwOMsfbvX3GE4ljVkqdehOE9rcrafpK1rHh18kxGH5rwuu7urfocfp/j7X7WEF7O4mX+/AfMU/iuRVib4j+JXjJg06SJf8AnpcN5aj8WwKzdS8UeEtX8VXelal4ssYb63nMU39rWItJNwOM79uD/wB9VP8ADCHRfG/xVvfDuhxMNJ02MNJrkSqRIemQpGcM24Lg9FJNddTiLBw5rqS5VdtrlX3u2/TuZRyHGtSlJWSV3crax4k8TXli11qesyrASFSG0UqHJ6DcRnHuFIrO8E6NrnjDU5LVNQ0rQ0PypcXkrXLyE9492VYjr0Fen+C9E1bR/wBoabUdN1X+0/D81lcm2iFokfkPH5MYAbksPmfByCSGOK5vxjpulQfEjWdMsbcW8Sus48k7TG0ihmUjpwxPHvXPlPE1HMMa8JCOvLzXW29nH1T66J/i9pZLHlShO7tfy9Lbr8TxX45aV8Z/gr4mtb3XrldU0Y3KtZ6pbW0f2K+UHOxmVcwuQOUOD6ZHNcp8Tfj7qWteZL4fs7zTbq6bdcXF3crP5Q67IUxtAz/EQTjgAda+qdG8Q6jpWj3Gi6zbw6/4dvo/KvbC9j8yOSM9mU5x7MvQ84HWvm39qD4HWvhjUrHxR4HFzfeEteuBDaKxDzadcnkWkrdDnqjnhlBycjJ+pcr6nlYjD1qM+Watf8fQ4zxt4xm8UWtpNdpI9ysKiSR2zuIHb0rllByRivozXfBnwn8GfC+x057KbXPG15YJDJcqG+x2E5wZCucBmUZUN82SMjAOa+fLpVGpTqOiyMP1r2IVOegp306Hc+dU/eVreVitPyF9gBRSKQ9rv9ZGFFZJ3SZyxd1cmkO23GfSs23mkj1BbmI/NbuHT6g5H8qu6gwjtcZ5xVGNdkIB+83JrgrO9RnJVd5s+ntJ0yDWLPSPHWlqGs7y2+z3IX/ljL1UH8Qy/XHrXv3wnd7zwwkYGWg4x7V8b/s6/ECfwnNNpGoI11oeofLc2+T8uerL6EYB47jNfXHwm1ez0u4gdLlbrTb7AgulxhsjIVsdH/Q9R3AxaaPfyzGR+r/V2ve3Xn/wTtWVkOGGK7r4S6bHLoOoXrrlprkRAn+6ijj/AL6dqw7yG1ni3xEHIzxS6R4ytvDelrYzsqqbuVmcsB1VCP5mkZ5lUcsOvUn1X4MfD64vpNQuPDVg00jb2G1grH1Kg4/Sua8W+FLnStQt7rwxpWmXFrDF5U2kykW8bLk/NGwBAPJBDDB9q6YeN4L+T91cKy57NWzosthqabJHG89K5cbgcPjqDoYiHNF/1p1T80eHTqzpS5oOzPFNU8I2l5M1za/A/wANW9395rnUbmAQof7xWIEt+QrodMt/i1pekRxaTrPhBbRFzHp0OmPDbjPZXU5/Gun+Jem6xpVtJe6XMrbFJ8pxlXFcP8K/GwbR77R7wiE27GW3jc8omcMg9lbB9g47V52F4dy3DRajBv8AxSlLTyu3b5HTVx+JrW553scX8QNBtNa1Jbj4keCJFkVvmu4YmuY/crNF84HswrQutf8ACPhnwPJpPwv0E263Uqxz6j9nkiigLEK0haT55ZADwOg7kdCz4neL5NRB0/TrhlUsFkkUFtueAAByzHoFHJPtk1Dr3h7/AIRz4ZyQXcZW6ni3yIzbjCByqE92GSWI/iY9sV574Oy51Ityn7OLuqfN7n3b/idMs3xbpez5tP6+X4HBeDdX8c2E8j6JqF80lk7RPtjE3lnkfxA9cGui8F6bfW9xcarrhma6vpMyGVg0p5yXYZycn0z0qb4Npu+IHiSzP+rcGX6Hfn/2Y16roOn2Es3Jhl29ejYr6Klg8NRqSqU6ajJ7tJJv1Z9HGvGVNTXVHiPxy+z6poluPCvj6LS9S0qf7RO9nMZVRRwBOidQWG0I33iSByMVe8NprS/C/UpvFC6d4e8RfK+ni7l8yzDMjOjyWzDCTNskCMd4UkHaDzXfapBZ+EF1XTfBNlpMmr6tfRXN3axRJCSC3NxcyKQQinJ6Z3Yxya4740WWjXdxpeiaALG78Q6tqyyajHbxjy7x1G0Tuy4YlQq4LNwMr3rzcdiakouCbjLptv5915NHl+1rRxCq+e3T7n/TPmfxZf6zZQtearqMy6xqcoeOCdt7qgJBmlLdM8qvryegGfP7qR4kmZ2LNzyT3NfUf7RXw0+HHhXwvq2v+NvEn2rxtqqtLZafps6+dNctwGePLbYhxnOBgYXnFfKmsZRRGeDnJH0r3cBVTwWsWvXa/WxzZni54mcqtTfp2JLHnSV/66nP5Cik0/8A5Bf/AG1P8hRXq0v4cfQ46fwINSO+4SMjgcn8KijUvLQx3SyP9FFWtNhLSKoGSxwPrXmpOcvU4leUjoPDOmvMm8Hy1Xnef4QOSa9j/Z98YJFH/YGoOHtbhflG47WU88enqMdDzXlPjeYaH4Qg02I4udQG046iMfeP48D8TWr4Gs7pLXR7uNW3PEhBHscf0rox3LFxguiN8QlBqK3R9eeGfiPB4cEmjeK3ZUWF5NL1I8rdKoJ8uT0kH/j31r2Jru3/AOEdSytYYmtfIyJCgZptw3Fye+4kn8a+dNN0+z8TeDzpmqwiaOSPv1RscMD2NT/CH4rjwnb3HgHxddfvtL/5BN9If9fb5x5bn+8hIGe6kVxCr4mdZRUun4mvpvhnxFFr19eW0kNhpcM7LLcXLhI0b72FUfxYySo6Y7ZArX0PxZdafdtJazyXsEQyx8vYzAdSoyc/TvVX4ha8NcgtbKyfGn2q4RFPys5+Zj+o/WmeEbIC4jLjuM59KD1cDlkKlL2lXrsey6Lrlp4k8Oo6yrLFNEGRgeoI4NeGfFjSE0jxB59tIkTM3DZ+6TwCR6c4PsTU/wABvFMcE39itI0apLKIVc43J5jbSvqMYrpfipZWEnh64tLfRLi91W53NHLHEfJgBJx83TOOWZufwxQeG1ZtGR+zDoqa54tvNeutPFvb6JC0ccL4Yx3MmARn+8qL1/26b+0NcWf9n3EA1dGuppRDBYxJliCQCWPatL9mPxAILHWdFlbdNlbkkDG5/wDVSH8SiN/wKuT+M10JPFdqph+WOU3MxUffEfzAH1yQo/Gn1A6z9nnQ7RrDV9bls0uLi/1qRYdyBsrC21QAexbdkdxWH8YvGmnWvxGsdDsrxv8AhINJv5bWC1tyJh9kVMlpduNkeMt8zEgKMdeMPwh8WJvCHg3T7LT444bxIji6u0by45HZmkcDgOckjGRXnPjzxV4ft9S1bWxbw6trXiKZV1JbpSkN3GBl3JjKkHdsxtbgqSc5rmxc6kKUpU9/626X7X07nsZHRhXxsacrtva3fz+XTqZHxlv7vUPESa3Jr9te27Fbb7Ra3sKzXaHDvhYfmijOAArHcOM5JNem/D2w8Aav4fEieGr7S45LBruKa6vg3mKrbCUdewOdwPIwT0NfO3jbWbG6ubU6doFnpYt0bzUglkk+0EknLGRieBwBmvT/AAPY+HvEXwY8R+FL74iXlm0F61vb2dhBGZ4kkijkcvI2cwyHapRSpJQ5I5B8zL6UnOM5XVr6bL5pNo+xzydLC4ayXLNbefTpfVb9rHzx4q1y31PxvrmraZlYb2/b7Ng8mIYVCT1+6oP41gzPJLIzyHO35V/rWhNBpVnrF4uj3N5dWduoUTXkCxSM+CGyikgDIOOTwKzmbG0Hq3J/Hmvec3JJN6I/N5SbSTexoWPGkr7yn+QoqRIzHo9ux/5aMxH54or06ekI+h209IIpxAlYx/e5P411nw/043mtR4XKwjef6VgrZThs+WM/wjPStjw3LrccxsNMTbNdsI8xrukYngKo9STj8a4aFWnTnzS6HPRtGackR+KkvvEfjwR2z+YzMtrawqhJznAUY6ksf1r6k8M/Dk6Xptjp0irI1jbJEzjoWC/MfzzXefsu/ssHwhaw+KfFfk3HiWSP9xbBg8WmBhzk/wAc2DgnovIGTk17A3gG0sR5lyy1hKUptyfUznLmk2eNeG9LmslbK/L9K8R/assVj8QW88IPmsiMVUckklf1AH/fIr6W+L3jLwR4L0+VHvoZrpEJ+ywuC/8AwI9EHuxFfEnxi8Wap458UfbLW5aFDKFi8pioB5ChTwdqjcffk8ZAE3S1YknLRI9e+E3iW9svAmmu4+1QqHWVHPzKwkbPP5V3mvfEfQ9N8EzzWc7Lqd0hhtbZl+cMRgv9FHOfXFfM/h3WPGGkxtDb6ybhJE5W7QTYxwDzzn8awtU0nW/EWtrPqt3LeTS/KM9FGeigcAfSs/bQV9dD6aWOf1SFKnTfPZLy9T6o+F48N694mt9K0uWO3ksoEkkRb4TSI3CmQgE7NzZyM/h6/RLWr2+m/ZLp1kby+SD14r86/Dmg+IfBmpR6roE11a3HmxwgrypDtyCO4wP0r1W2+NPi06PH9vvb+O5SP5USBZI2HYbshv0496iGKoz2kjwqmBxMHaUGelW8k/gTxs+ul0W1a5dJ1djteFiN6nHI+6GBHQgdjVv4lfF34KzWcmNf0y9mdVCSWpkn4J6hdoOQR0PcCvA/E/xF8Z+IdDvrKGzMUeoRiCSed/3iISdwUDgbuB17Vy/hrwQIoo2l8lCryJjbn7rkfyxSq4yjTV3IujgMRVaSi166FjxZrWreIPiHdX3gS81mC0lI2iecIXxwXZM7Bn0NN0WC+0XXv+Eg8dahHqF5AXS2s5Z4pxPxhSyqSoiGTkcZPA7mtay8LQzXU1vcXTqoXcoQYB56VsW3gTwxb6hGiWCSx6pZNtLsSUuIju/8eQn8hXn1czpSvG7s+yO+OU16bUrq/r/kc34+8ZaDqembPD/gDQNBuf8AltdW80k8h46oshIX6D8643wDDe2Mkl/a2VzG7RMPtKjarxlyDksCDggHuRXq154L8OSW6Srp0S+YoxtJ4IrOm8EaQtrLJZyX8YiYPJb29xtMsXVlX0bbnB9RWdHMMPFWimr/ANdzevl2Mqy56kua3m7/AIo5bSPh8mt2rWkUiQqDkRp/Gx/2j1J9SOfQVzuufDPxHY6gUdIvLJ+WQkjj6DNe92djYaUI0sJmuIUUSQXDHJliblW4+oz9TUnji4tH8Oz3gVRIUKn2auSnmuJddQvo3bXod7yfCOmm0/vPnTxZbR2Is7BG3fZ4AGbHUnkn9aKi8TT/AGnUpJv7zHH0or7+Wjstj51tN6Hbx+GrcEMX7Dv0q/bafp1ha+dY+bDqETBrORHwwlU5U57YIzmtCSIlUAbG4DtVeGHzPMnJ53mJBj7oB5/E18Mq9WS5pS2Pq5YHDwfJCCu/y67nV6b8ePi3plqtu+rSXTquDMjGNmPckDK/pWR4o+MHxR8RRtDea7eCIjBTz3x/47tz+NZ0cH+1+lWEtVP8X/jtdLzOaWqOFcP05O6ehxmrW+qagwF3LLOWbOz7qD32jjPv1rY8K+HC265uMRxwv5ESd3cjMjfgNq/ia15IQC0gP+rGcAegzWtb2gg0+1iD58u0WbOPvPIN7H82/SufEY6c4WOjC5RSo1k9/wCv6+4hhsNK3TN9nBHCLz0qzo/2KHVi0UCKqH5ePSkjtVWFfm68nijSbYMzsW5256etea3dO7PZ9n2RuafcRyatpcRC4bUFdh/uRO386frU9qdJh2xx8Q7D8vuP8Kg0e1DeINN+bHF1L07rEQP50apaj+x0ff2GRj1rmlFXj/XVk8n7yWn9WMZ5EGmsgUAHHT1qSzlV9PZv4kvZc/RlRv5k0w2o+wE7/wBKNJt8294u/wC7NCw4/vJg/wDoIrqVnF/12JnD3o+v6MlSZBeK5PXjP1//AFVZvL8QabHdRjMmm3K3IA7qDhh+KEiqUtv/ABBvun0q3b2itMyM2VZCCMdf85qFyppl1KPNG1i3eXcUU0tsp3QsxkhPsecfrn8ay2vDBNvjb5lOR7ils7ff4ctpmkJaB2hBx1COUB/752/lUd5agKHD98dKfLGMrBSjzQvYNLv2TzLEH5YQ1xaH+6mcvH9ATnHox9KXWGhv7M28x/dyc4B6e1UL2I28LXUbjzLP98mRwcdVPsRkH2Nal5ZJHcSQo2FwHXIyVyobHv1xWkoxTU1uRTjZum1p+nY4XVPBMAbdDLuRjwQeR7Giu0WLy1+8SD7UV1RzLEpWUzllk+Dbvyfif//Z");

        //comprobamos el metodo insertar
        assertEquals(true, peliModel.insertar(p_nueva));

        //guardamos en un array las peliculas que devuelve el metodo read pero de solo los datos para el reciclerView
        ArrayList<Pelicula> peliculasCortas = peliModel.findSomePelis();

        //comprobamos el tama√±o del array
        assertEquals(1, peliculasCortas.size());

        //comprobamos los datos que hemos recuperado por lo que los datos no son recuperados deben dar null
        // y los datos que s√≠ se han recuperado son comprobados correctamente
        assertEquals(null, peliculasCortas.get(0).getDuracion());
        assertEquals("1", peliculasCortas.get(0).getId().toString());
        assertEquals("Toy Story", peliculasCortas.get(0).getTitulo());
        assertEquals("Pedro", peliculasCortas.get(0).getDirector());
        assertEquals("",
                              peliculasCortas.get(0).getImage());

        //guardamos en un array todas las peliculas devueltas por el metodo readAll
        ArrayList<Pelicula> peliculas = peliModel.findAllPelis();
        //comprobamos que el tama√±o es 1
        assertEquals(1, peliculas.size());

        //comprobamos os datos recuperados
        assertEquals("1", peliculas.get(0).getId().toString());
        assertEquals("Toy Story", peliculas.get(0).getTitulo());
        assertEquals("Pedro", peliculas.get(0).getDirector());
        assertEquals("100", peliculas.get(0).getDuracion());
        assertEquals("10/01/2011", peliculas.get(0).getFecha());
        assertEquals("Aventuras", peliculas.get(0).getCategoria());
        assertEquals("0", peliculas.get(0).getEstreno().toString());
        assertEquals("Perfecta para ni√±os", peliculas.get(0).getComentario());

        //guardamos en un array de string todas las categorias de la base de datos
        ArrayList<String> categorias = peliModel.getCategorias();
        //comprobamos el tama√±o del array sabiendo que no esta vacio
        assertEquals(1, categorias.size());

        //actualizamos la pelicula
        Pelicula p_actualizada = new Pelicula();
            p_actualizada.setId(1);
            p_actualizada.setTitulo("Cenicienta");
            p_actualizada.setDirector("Pedro");
            p_actualizada.setDuracion ("90");
            p_actualizada.setFecha ("10/11/2001");
            p_actualizada.setCategoria("Aventuras") ;
            p_actualizada.setEstreno(0);
            p_actualizada.setComentario ("Perfecta para ni√±os");

        //comprobamos el update de pelicula
        assertEquals(true, peliModel.update(p_actualizada));

        //recuperamos la pelicula actualizada
        peliculas = peliModel.findAllPelis();

        //comprobamos el tama√±o de del array sabiendo que es 1
        assertEquals(1, peliculas.size());

        //recuperamos las categorias tras actualizar y comprobar el tama√±o
        categorias = peliModel.getCategorias();
        assertEquals(1, categorias.size());

        //comprobamos los datos actualizados
        assertEquals("1", peliculas.get(0).getId().toString());
        assertEquals("Cenicienta", peliculas.get(0).getTitulo());
        assertEquals("Pedro", peliculas.get(0).getDirector());
        assertEquals("90", peliculas.get(0).getDuracion());
        assertEquals("10/11/2001", peliculas.get(0).getFecha());
        assertEquals("Aventuras", peliculas.get(0).getCategoria());
        assertEquals("0", peliculas.get(0).getEstreno().toString());
        assertEquals("Perfecta para ni√±os", peliculas.get(0).getComentario());

        //recuperamos la pelicula por id
        Pelicula p = peliModel.getById(peliculas.get(0).getId());

        //comprobar que el id de la pelicula recuperada coincide con la unica que hay introducida
        assertEquals("1", p.getId().toString());

        //guardamos en un array los resultados del search y comprobamos que el tama√±o no es 0
        peliculas = peliModel.findByCriteria("","", "");
        assertEquals(1, peliculas.size());

        //comprobamos que borrar la pelicula con id 100 es erroneo
        assertEquals(false, peliModel.delete(100));

        //comprobamos que borrar el id existente es correcto
        assertEquals(true, peliModel.delete(peliculas.get(0).getId()));

        //recuperamos las peliculas y comprobamos que el array de peliculas esta vacio
        peliculas = peliModel.findAllPelis();
        assertEquals(0, peliculas.size());

        //recuperamos las categorias y comprobamos que el array de peliculas esta vacio
        categorias = peliModel.getCategorias();
        assertEquals(0, categorias.size());

    }

    @Test
    public void useAppContext() {
        // Context of the app under test.
        Context appContext = InstrumentationRegistry.getInstrumentation().getTargetContext();
        assertEquals("com.example.infopelis", appContext.getPackageName());
    }
}
